	@Test
	public void testKeyRead() throws Exception {
		if (data.keyValue) {
			byte[] bytes = readTestKey(data.name + ".key");
			assertEquals('(', bytes[0]);
			assertEquals(')', bytes[bytes.length - 1]);
		}
		try (InputStream pubIn = this.getClass()
				.getResourceAsStream(data.name + ".asc")) {
			if (pubIn != null) {
				PGPPublicKey publicKey = readAsc(pubIn);
				// Do a full test trying to load the secret key.
				PGPDigestCalculatorProvider calculatorProvider = new JcaPGPDigestCalculatorProviderBuilder()
						.build();
				try (InputStream in = new BufferedInputStream(this.getClass()
						.getResourceAsStream(data.name + ".key"))) {
					PGPSecretKey secretKey = SecretKeys.readSecretKey(in,
							calculatorProvider,
							data.encrypted ? () -> "nonsense".toCharArray()
									: null,
							publicKey);
					assertNotNull(secretKey);
				} catch (PGPException e) {
					// Currently we may not be able to load OCB-encrypted keys.
					assertTrue(e.getMessage().contains("OCB"));
					assertTrue(data.encrypted);
					assertFalse(ocbAvailable());
				}
			}
		}
	}

