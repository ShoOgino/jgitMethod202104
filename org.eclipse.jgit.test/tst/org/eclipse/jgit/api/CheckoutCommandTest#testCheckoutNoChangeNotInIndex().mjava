	@Test
	public void testCheckoutNoChangeNotInIndex() throws Exception {
		git.checkout().setCreateBranch(true).setName("test2").call();
		File f = writeTrashFile("NewFile.txt", "New file");
		git.add().addFilepattern("NewFile.txt").call();
		git.commit().setMessage("New file created").call();
		git.checkout().setName("test").call();
		assertFalse("NewFile.txt should not exist", f.exists());
		writeTrashFile("NewFile.txt", "New file");
		git.add().addFilepattern("NewFile.txt").call();
		git.commit().setMessage("New file created again with same content")
				.call();
		// Now remove the file from the index only. So it exists in both
		// commits, and in the working tree, but not in the index.
		git.rm().addFilepattern("NewFile.txt").setCached(true).call();
		assertTrue("NewFile.txt should exist", f.isFile());
		git.checkout().setName("test2").call();
		assertTrue("NewFile.txt should exist", f.isFile());
		assertEquals(Constants.R_HEADS + "test2", git.getRepository()
				.exactRef(Constants.HEAD).getTarget().getName());
		org.eclipse.jgit.api.Status status = git.status().call();
		assertEquals("[NewFile.txt]", status.getRemoved().toString());
		assertEquals("[NewFile.txt]", status.getUntracked().toString());
	}

