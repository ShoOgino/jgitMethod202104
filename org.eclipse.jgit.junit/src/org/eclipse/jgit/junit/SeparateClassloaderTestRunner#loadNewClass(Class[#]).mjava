	private static Class<?> loadNewClass(Class<?> klass)
			throws InitializationError {
		try {
			String pathSeparator = System.getProperty("path.separator");
			String[] classPathEntries = System.getProperty("java.class.path")
					.split(pathSeparator);
			URL[] urls = new URL[classPathEntries.length];
			for (int i = 0; i < classPathEntries.length; i++) {
				urls[i] = Paths.get(classPathEntries[i]).toUri().toURL();
			}
			ClassLoader testClassLoader = new URLClassLoader(urls) {

				@Override
				public Class<?> loadClass(String name)
						throws ClassNotFoundException {
					if (name.startsWith("org.eclipse.jgit.")) {
						return super.findClass(name);
					}

					return super.loadClass(name);
				}
			};
			return Class.forName(klass.getName(), true, testClassLoader);
		} catch (ClassNotFoundException | MalformedURLException e) {
			throw new InitializationError(e);
		}
	}

