	/** {@inheritDoc} */
	@Override
	protected void run() {
		LsRemoteCommand command = Git.lsRemoteRepository().setRemote(remote)
				.setTimeout(timeout).setHeads(heads).setTags(tags);
		TreeSet<Ref> refs = new TreeSet<>(
				(Ref r1, Ref r2) -> r1.getName().compareTo(r2.getName()));
		try {
			refs.addAll(command.call());
			for (Ref r : refs) {
				if (symref && r.isSymbolic()) {
					show(r.getTarget(), r.getName());
				}
				show(r.getObjectId(), r.getName());
				if (r.getPeeledObjectId() != null) {
					show(r.getPeeledObjectId(), r.getName() + "^{}"); //$NON-NLS-1$
				}
			}
		} catch (GitAPIException | IOException e) {
			throw die(e.getMessage(), e);
		}
	}

