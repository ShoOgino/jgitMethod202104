	/**
	 * Skips a list including nested lists.
	 *
	 * @param sExp
	 *            buffer containing valid binary s-expression data
	 * @param start
	 *            index of the opening '(' of the list to skip
	 * @return the index after the closing ')' of the skipped list
	 */
	private static int skip(byte[] sExp, int start) {
		int i = start + 1;
		int depth = 1;
		while (depth > 0) {
			switch (sExp[i]) {
			case '(':
				depth++;
				break;
			case ')':
				depth--;
				break;
			default:
				// We must be on a length
				int j = i;
				while (sExp[j] >= '0' && sExp[j] <= '9') {
					j++;
				}
				// j is on the colon
				int length = Integer.parseInt(
						new String(sExp, i, j - i, StandardCharsets.US_ASCII));
				i = j + length;
			}
			i++;
		}
		return i;
	}

